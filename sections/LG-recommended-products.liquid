{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- assign product = product | default: null -%}
{%- assign collection = collection | default: null -%}
{%- assign enable_slider = section.settings.enable_slider -%}
{%- assign product_limit = section.settings.product_limit | default: 4 -%}
{%- assign fallback_collection = section.settings.fallback_collection -%}

<div class="recommended-products-section">
  <div class="page-width">
    <div class="recommended-products__header">
      <h2 class="h3">Recommended for you</h2>
    </div>
    <div id="dynamic-recommendations-{{ section.id }}"></div>
    <slider-component class="{% if enable_slider %}slider-component-desktop{% else %}page-width-desktop{% endif %}">
      {%- if product or collection or fallback_collection != blank -%}
        <ul
          id="RecommendedSlider-{{ section.id }}"
          class="grid product-grid contains-card contains-card--product grid--{{ product_limit }}-col-desktop{% if enable_slider %} slider slider--desktop{% endif %}"
          role="list"
          aria-label="Recommended products slider"
        >
          {%- assign recommended_products = blank -%}
          {%- if product and product.collections.size > 0 -%}
            {%- assign main_collection = product.collections.first -%}
            {%- assign recommended_products = main_collection.products
              | where: 'id', product.id, false
              | slice: 0, product_limit
            -%}
          {%- elsif collection -%}
            {%- assign recommended_products = collection.products | slice: 0, product_limit -%}
          {%- elsif fallback_collection != blank -%}
            {%- assign recommended_products = fallback_collection.products | slice: 0, product_limit -%}
          {%- endif -%}
          {%- if recommended_products and recommended_products.size > 0 -%}
            {%- for prod in recommended_products -%}
              <li class="grid__item{% if enable_slider %} slider__slide{% endif %}">
                {% render 'card-product', product: prod %}
              </li>
            {%- endfor -%}
          {%- else -%}
            <li>
              <p>
                No recommendations available.<br>
                <small
                  >Debug: product={{ product | json }}, collection={{ collection | json }}, fallback_collection=
                  {{- fallback_collection | json -}}
                </small>
              </p>
            </li>
          {%- endif -%}
        </ul>
      {%- else -%}
        <ul>
          <li><p>No source for recommendations (no product, collection, or fallback collection).</p></li>
        </ul>
      {%- endif -%}
      {% if enable_slider %}
        <div class="slider-buttons">
          <button
            type="button"
            class="slider-button slider-button--prev"
            name="previous"
            aria-label="Previous slide"
            aria-controls="RecommendedSlider-{{ section.id }}"
          >
            <span class="svg-wrapper">{{ 'icon-caret.svg' | inline_asset_content }}</span>
          </button>
          <div class="slider-counter caption">
            <span class="slider-counter--current">1</span>
            <span aria-hidden="true"> / </span>
            <span class="visually-hidden">of</span>
            <span class="slider-counter--total">1</span>
          </div>
          <button
            type="button"
            class="slider-button slider-button--next"
            name="next"
            aria-label="Next slide"
            aria-controls="RecommendedSlider-{{ section.id }}"
          >
            <span class="svg-wrapper">{{ 'icon-caret.svg' | inline_asset_content }}</span>
          </button>
        </div>
      {% endif %}
    </slider-component>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  var productId = null;
  var limit = {{ section.settings.product_limit | default: 4 }};
  var container = document.getElementById('dynamic-recommendations-{{ section.id }}');

  // Try to get productId from product page context
  {% if product and product.id %}
    productId = {{ product.id }};
  {% else %}
    // Try to get from favorites in localStorage (first product)
    try {
      var guestFavorites = JSON.parse(localStorage.getItem('guestFavorites')) || [];
      if (guestFavorites.length > 0 && guestFavorites[0].id) {
        productId = guestFavorites[0].id;
      }
    } catch (e) {}
  {% endif %}

  if (productId && container) {
    fetch(`/recommendations/products?section_id=dynamic-recommendations&product_id=${productId}&limit=${limit}`)
      .then(response => response.text())
      .then(html => {
        if (html && html.indexOf('No dynamic recommendations available') === -1) {
          container.innerHTML = html;
        }
      });
  }
});
</script>

{% schema %}
{
  "name": "Recommended Products",
  "settings": [
    {
      "type": "range",
      "id": "product_limit",
      "min": 2,
      "max": 12,
      "step": 1,
      "default": 4,
      "label": "Number of products to show"
    },
    {
      "type": "checkbox",
      "id": "enable_slider",
      "label": "Show as slider",
      "default": false
    },
    {
      "type": "collection",
      "id": "fallback_collection",
      "label": "Fallback collection (if no product/collection)"
    }
  ],
  "presets": [
    {
      "name": "Recommended Products"
    }
  ]
}
{% endschema %}
